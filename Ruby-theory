General
1.map = it is similar to array and it returns only array
2.select = which return an array only if condition become true inside the block but map return all element with boolean if we use map instead select
3.* = let say *array if you pass string as a argument it accept param as an array that is called splate operator.
4.delete = let say array.delete(4) it deletes only elements 4 which is present
5.delete_at = it delete index base let say array.delete_at(4)

Ruby strongly typed or weekly typed
=> Ruby is a weakly typed language becuse here is an example
 "hello" + 3

  O/P
  Implicit conversion error


OOPS
1. Everything in ruby is an object except block of code let say

=> def foo
      
   end

=> Boolean method
   "".empty?  #true
   "".nil?  #false

=> Data types

Data types in Ruby represents different types of data like text, string, numbers, etc. All data types are based on classes because it is a pure Object-Oriented language. There are different data types in Ruby as follows:

Numbers
Boolean
Strings
Hashes
Arrays
Symbols

Numbers: Generally a number is defined as a series of digits, using a dot as a decimal mark. Optionally the user can use the underscore as a separator. There are different kinds of numbers like integers and float. Ruby can handle both Integers and floating point numbers. According to their size, there are two types of integers, one is Bignum and second is Fixnum.